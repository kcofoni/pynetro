from __future__ import annotations
from typing import Any, Protocol, runtime_checkable

@runtime_checkable
class AsyncHTTPResponse(Protocol):
    status: int
    async def json(self) -> Any: ...
    async def text(self) -> str: ...
    def raise_for_status(self) -> None: ...
    async def __aenter__(self) -> "AsyncHTTPResponse": ...
    async def __aexit__(self, exc_type, exc, tb) -> None: ...

@runtime_checkable
class AsyncHTTPClient(Protocol):
    def get(self, url: str, **kwargs) -> AsyncHTTPResponse: ...
    def post(self, url: str, **kwargs) -> AsyncHTTPResponse: ...
    def put(self, url: str, **kwargs) -> AsyncHTTPResponse: ...
    def delete(self, url: str, **kwargs) -> AsyncHTTPResponse: ...
